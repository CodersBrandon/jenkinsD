stages:
- install
- build
- docker

variables:
  PROJECT_PATH: "$CI_PROJECT_DIR"
  TAG_LATEST: $CI_REGISTRY_IMAGE_HUB:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE_HUB:$CI_COMMIT_SHORT_SHA

install_dependencies:
  stage: install
  script:
    - ls -lsa
    - echo " >> Instalar dependencias"

build_gitlab:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd webhotelhub
    - ls -lsa    
    - echo $CI_REGISTRY_IMAGE
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"  -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:latest"

docker_hub:
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER_HUB" -p "$CI_REGISTRY_PASSWORD_HUB" $CI_REGISTRY_HUB
  script:
    - cd webhotelhub
    - ls -lsa    
    - echo "$CI_REGISTRY_IMAGE_HUB"
    - docker build --pull -t "$CI_REGISTRY_IMAGE_HUB:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE_HUB:latest" .
    #- docker build --cache-from "$TAG_LATEST" -t "$TAG_COMMIT" -t "$TAG_LATEST" .
    - docker push "$CI_REGISTRY_IMAGE_HUB:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE_HUB:latest"
    #- docker push "$TAG_LATES"
    #- docker push "$TAG_COMMIT"
  
  
  # Run this job where a Dockerfile exists
  #rules:
    #- if: $CI_COMMIT_BRANCH
  #  - exists:
  #    - Dockerfile