{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/habitacion/habitaion-list/habitaion-list.component.ts","./src/app/habitacion/habitaion-list/habitaion-list.component.html","./src/app/habitacion/habitaion/habitaion.component.ts","./src/app/habitacion/habitaion/habitaion.component.html","./src/app/hotel/hotel-list/hotel-list.component.ts","./src/app/hotel/hotel-list/hotel-list.component.html","./src/app/hotel/hotel.model.ts","./src/app/hotel/hotel.service.ts","./src/app/hotel/hotel/hotel.component.ts","./src/app/hotel/hotel/hotel.component.html","./src/environments/environment.beta.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HotelListComponent } from './hotel/hotel-list/hotel-list.component';\nimport { HotelComponent } from './hotel/hotel/hotel.component';\n//import { HotelDetailComponent } from './hotel/hotel-detail/hotel-detail.component';\n//import { HotelEditComponent } from './hotel/hotel-edit/hotel-edit.component';\n\n\nconst routes: Routes = [\n  {path : 'hoteles',component:HotelListComponent},\n  { path: 'hotel', component: HotelComponent },\n  //{ path: 'hoteles/:id', component: HotelDetailComponent },\n  //{ path: 'hoteles/editar/:id', component: HotelEditComponent },\n  //{ path: 'hoteles/crear', component: HotelEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {environment} from \"../environments/environment\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webhotelhub';\n\n  ambiente = environment.ambiente;\n}\n","\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"hoteles\" routerLinkActive=\"active\" class=\"nav-link\" >Hoteles</a>\n    </li>\n    <li class=\"nav-item\">\n      <a routerLink=\"clientes\" routerLinkActive=\"active\" class=\"nav-link\" >Clientes</a>\n    </li>\n  </ul>\n</nav>\n\n<h1 class=\"text-center\"> {{title}} - {{ambiente}}</h1>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\n//import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {HabitaionListComponent} from './habitacion/habitaion-list/habitaion-list.component';\nimport {HabitaionComponent} from './habitacion/habitaion/habitaion.component';\nimport {HotelListComponent} from './hotel/hotel-list/hotel-list.component';\nimport {HotelComponent} from './hotel/hotel/hotel.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HabitaionListComponent,\n        HabitaionComponent,\n        HotelListComponent,\n        HotelComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-habitaion-list',\n  templateUrl: './habitaion-list.component.html',\n  styleUrls: ['./habitaion-list.component.css']\n})\nexport class HabitaionListComponent {\n\n}\n","<p>habitaion-list works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-habitaion',\n  templateUrl: './habitaion.component.html',\n  styleUrls: ['./habitaion.component.css']\n})\nexport class HabitaionComponent {\n\n}\n","<p>habitaion works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {Hotel} from \"../hotel.model\";\nimport {HotelService} from \"../hotel.service\";\n\n@Component({\n    selector: 'app-hotel-list',\n    templateUrl: './hotel-list.component.html',\n    styleUrls: ['./hotel-list.component.css']\n})\nexport class HotelListComponent implements OnInit {\n    hoteles: Hotel[] = [];\n\n    //\n    constructor(private hotelService: HotelService, private router:Router) {\n    }\n\n    ngOnInit(): void {\n        //console.log('cargando....')\n        this.hotelService.getHoteles().subscribe(data => {\n            this.hoteles = data;\n        });\n    }\n\n    onDelete(id: number): void {\n        /*\n        this.hotelService.deleteHotel(id).subscribe(() => {\n            // @ts-ignore\n            this.hoteles = this.hoteles.filter(hotel => hotel.id !== id);\n        });\n        */\n    }\n}\n","\n<!-- hotel.component.html -->\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h1 class=\"my-4\">Gestión de Hoteles</h1>\n      </div>\n    </div>\n\n\n    <!-- Tabla para mostrar la lista de hoteles -->\n    <div class=\"row mt-5\">\n        <div class=\"col-md-12 text-right\">\n            <button routerLink=\"/hotel\" class=\"btn btn-primary\">Nuevo Hotel</button>\n        </div>\n        <div class=\"clearfix\">&nbsp;    </div>\n        <div class=\"col-md-12\">\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>Nombre</th>\n                <th>Dirección</th>\n                <th>Ciudad</th>\n                <th>País</th>\n                <th>Estrellas</th>\n                <th>Acciones</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let hotel of hoteles\">\n                <td>{{ hotel.id }}</td>\n                <td>{{ hotel.nombre }}</td>\n                <td>{{ hotel.direccion }}</td>\n                <td>{{ hotel.ciudad }}</td>\n                <td>{{ hotel.pais }}</td>\n                <td>{{ hotel.estrellas }}</td>\n                <td>\n                    <!--\n                    <button routerLink=\"/hoteles/{{ hotel.id }}\">Ver</button>\n                    <button routerLink=\"/hoteles/editar/{{ hotel.id }}\">Editar</button>\n                   <button (click)=\"onDelete(hotel.id)\">Eliminar</button>-->\n                </td>\n            </tr>\n            </tbody>\n        </table>\n      </div>\n    </div>\n</div>\n","export class Hotel {\n  constructor(\n    public id?: number,\n    public nombre?: string,\n    public direccion?: string,\n    public ciudad?: string,\n    public pais?: string,\n    public estrellas?: number\n  ) {}\n}\n","import {HttpClient} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Hotel} from './hotel.model';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotelService {\n\n    private apiUrl = environment.apiUrl + 'hoteles';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getHoteles(): Observable<Hotel[]> {\n        return this.http.get<Hotel[]>(this.apiUrl);\n    }\n\n    getHotel(id: number): Observable<Hotel> {\n        return this.http.get<Hotel>(`${this.apiUrl}/${id}`);\n    }\n\n    createHotel(hotel: Hotel): Observable<Hotel> {\n        return this.http.post<Hotel>(this.apiUrl, hotel);\n    }\n\n    updateHotel(hotel: Hotel): Observable<Hotel> {\n        return this.http.put<Hotel>(`${this.apiUrl}/${hotel.id}`, hotel);\n    }\n\n    deleteHotel(id: number): Observable<void> {\n        return this.http.delete<void>(`${this.apiUrl}/${id}`);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {HotelService} from '../hotel.service';\nimport {Hotel} from '../hotel.model';\n\n@Component({\n    selector: 'app-hotel',\n    templateUrl: './hotel.component.html',\n    styleUrls: ['./hotel.component.css']\n})\n\nexport class HotelComponent implements OnInit {\n\n    hotel: Hotel = new Hotel();\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private hotelService: HotelService\n    ) {\n    }\n\n\n    ngOnInit(): void {\n        /*    const id =  +this.route.snapshot.paramMap.get('id');\n            if (id) {\n                this.hotelService.getHotel(id).subscribe(data => {\n                    this.hotel = data;\n                });\n            }*/\n    }\n\n\n    onSave(): void {\n        if (this.hotel.id) {\n            this.hotelService.updateHotel(this.hotel).subscribe(() => {\n                this.router.navigate(['/hoteles']);\n            });\n        } else {\n            this.hotelService.createHotel(this.hotel).subscribe(() => {\n                this.router.navigate(['/hoteles']);\n            });\n        }\n    }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h1 class=\"my-4\">Gestión de Hoteles</h1>\n      </div>\n    </div>\n    <!-- Formulario para agregar un nuevo hotel -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <form (ngSubmit)=\"onSave()\" autocomplete=\"off\">\n               <div class=\"form-group\">\n                    <label>Nombre:</label>\n                    <input [(ngModel)]=\"hotel.nombre\" name=\"nombre\" class=\"form-control\">\n                </div>\n                 <div class=\"form-group\">\n                     <label>Dirección:</label>\n                     <input [(ngModel)]=\"hotel.direccion\" name=\"direccion\" class=\"form-control\">\n                 </div>\n                 <div class=\"form-group\">\n                     <label>Ciudad:</label>\n                     <input [(ngModel)]=\"hotel.ciudad\" name=\"ciudad\" class=\"form-control\">\n                 </div>\n                 <div class=\"form-group\">\n                     <label>País:</label>\n                     <input [(ngModel)]=\"hotel.pais\" name=\"pais\" class=\"form-control\">\n                 </div>\n\n                 <div class=\"form-group\">\n                     <label>Estrellas:</label>\n                     <input [(ngModel)]=\"hotel.estrellas\" name=\"estrellas\" type=\"number\" class=\"form-control\">\n                 </div>\n                <div class=\"form-group \">\n                    <button type=\"submit\" class=\"btn btn-primary float-end\">Guardar</button>\n                    &nbsp;&nbsp;\n                    <button routerLink=\"/hoteles\" class=\"btn btn-secondary\">Cancelar</button>\n                </div>\n\n\n            </form>\n\n\n        </div>\n    </div>\n\n</div>\n","\nexport const environment = {\n    production: false,\n    ambiente: \"Beta\",\n    tiempo_session: 60,\n    version: '1.0.1',\n    apiUrl : 'http://localhost:8181/api/'\n};\n\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HotelListComponent","HotelComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports","environment","AppComponent","constructor","title","ambiente","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate2","BrowserModule","HttpClientModule","FormsModule","ReactiveFormsModule","HabitaionListComponent","HabitaionComponent","AppModule","bootstrap","declarations","HabitaionListComponent_Template","HabitaionComponent_Template","ɵɵtextInterpolate","hotel_r1","id","nombre","direccion","ciudad","pais","estrellas","hotelService","router","hoteles","ngOnInit","getHoteles","subscribe","data","onDelete","ɵɵdirectiveInject","HotelService","i2","Router","HotelListComponent_Template","ɵɵtemplate","HotelListComponent_tr_30_Template","ɵɵproperty","Hotel","http","apiUrl","get","getHotel","createHotel","hotel","post","updateHotel","put","deleteHotel","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn","route","onSave","navigate","ActivatedRoute","HotelComponent_Template","ɵɵlistener","HotelComponent_Template_form_ngSubmit_7_listener","HotelComponent_Template_input_ngModelChange_11_listener","$event","HotelComponent_Template_input_ngModelChange_15_listener","HotelComponent_Template_input_ngModelChange_19_listener","HotelComponent_Template_input_ngModelChange_23_listener","HotelComponent_Template_input_ngModelChange_27_listener","production","tiempo_session","version","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}